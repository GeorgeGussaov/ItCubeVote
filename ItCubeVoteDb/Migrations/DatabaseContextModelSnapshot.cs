// <auto-generated />
using System;
using ItCubeVoteDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ItCubeVoteDb.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ItCubeVoteDb.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ItCubeVoteDb.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirsAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GitLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ItCubeVoteDb.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ItCubeVoteDb.Models.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoolestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MostBeautifulId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MostDificultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CoolestId");

                    b.HasIndex("EventId");

                    b.HasIndex("MostBeautifulId");

                    b.HasIndex("MostDificultId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("ItCubeVoteDb.Models.Project", b =>
                {
                    b.HasOne("ItCubeVoteDb.Models.Event", null)
                        .WithMany("Projects")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("ItCubeVoteDb.Models.Vote", b =>
                {
                    b.HasOne("ItCubeVoteDb.Models.Project", "Coolest")
                        .WithMany()
                        .HasForeignKey("CoolestId");

                    b.HasOne("ItCubeVoteDb.Models.Event", null)
                        .WithMany("Votes")
                        .HasForeignKey("EventId");

                    b.HasOne("ItCubeVoteDb.Models.Project", "MostBeautiful")
                        .WithMany()
                        .HasForeignKey("MostBeautifulId");

                    b.HasOne("ItCubeVoteDb.Models.Project", "MostDificult")
                        .WithMany()
                        .HasForeignKey("MostDificultId");

                    b.HasOne("ItCubeVoteDb.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Coolest");

                    b.Navigation("MostBeautiful");

                    b.Navigation("MostDificult");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ItCubeVoteDb.Models.Event", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
